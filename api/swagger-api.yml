swagger: '2.0'
info:
  version: '1.0.0'
  title: Dash-ed
  description: |
    REST API server for the Dash-ed application.
    
    ## REST
    Dash-ed is a RESTful API:
    - It makes use of native concepts and techniques of HTTP
    - It follows the constraints of REST
    - It is defined in terms of endpoints and parameters
    
    ## JSON
    The Dash-ed API uses exclusively JSON, so you should always set the
    <strong>Content-type</strong> header to <strong>application/json</strong>.
host: dash-ed.herokuapp.com
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  authKey:
    type: 'apiKey'
    name: 'x-auth'
    in: 'header'
paths:
  /:
    get:
      operationId: getRoot
      summary: Get the entry point
      tags:
        - root
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  text:
                    type: string
                    default: Hello Dash-ed REST API!
                required:
                  - text
  
  /users/login:
    post:
      operationId: getUser
      summary: Login user
      tags:
        - Users
      parameters:
        - name: user
          in: body
          schema:
            $ref: '#/definitions/NewLoginUser'
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/LoginUser'
  
  /users/signup:
    post:
      operationId: createUser
      summary: Create a new user
      tags:
        - Users
      parameters:
        - name: newUser
          in: body
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        201:
          description: Created

  /users/signup/verify:
    get:
      operationId: verifyUser
      summary: Verify email account
      tags:
        - Users
      parameters:
        - name: id
          in: query
          type: string
          required: true
          description: SHA256 email verification id
      responses:
        200:
          description: Ok

  /users/{userId}/subjects/{subjectId}:
    post:
      operationId: addSubjectToUser
      summary: Add subject to user
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          type: integer
          required: true
        - name: subjectId
          in: path
          type: integer
          required: true
      responses:
        201:
          description: Created
  
  /states:
    get:
      operationId: getStates
      summary: Get states related information
      tags:
        - States
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/State'

  /subjects:
    get:
      operationId: getSubjects
      summary: Get subjects related information
      tags:
        - Subjects
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Subject'
  
  /subjects/{subjectId}:
    get:
      operationId: getSubjectById
      summary: Get subject information
      tags:
        - Subjects
      parameters:
        - name: subjectId
          in: path
          type: integer
          required: true
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/definitions/Post'
                  news:
                    type: array
                    items:
                      $ref: '#/definitions/News'

  /questions:
    post:
      operationId: createQuestion
      summary: Create a new question
      tags:
        - Questions
      security:
        - authKey: []
      parameters:
        - name: newQuestion
          in: body
          schema:
            $ref: '#/definitions/NewQuestion'
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Question'

  /questions/subjects/{subjectId}:
    parameters:
      - name: subjectId
        in: path
        type: integer
        required: true
    get:
      operationId: getQuestionsBySubjectId
      summary: Get questions by subject id
      tags:
        - Questions
      security:
        - authKey: []
      responses:
        201:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/NewQuestionBySubjectId'

  /questions/approved/{questionId}:
    parameters:
      - name: questionId
        in: path
        type: integer
        required: true
    patch:
      operationId: approveQuestion
      summary: Approve a question
      tags:
        - Questions
      security:
        - authKey: []
      responses:
        200:
          description: Approved
  
definitions:
  LoginUser:
    type: object
    properties:
      jwt:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
      email:
        type: string
        format: email
      kind:
        type: string
        default: teacher
        enum:
          - admin
          - teacher
      gender:
        type: string
        default: other
        enum:
          - male
          - female
          - other
      campusId:
        type: integer
        minimum: 0
      currency:
        type: integer
        minimum: 0
      experience:
        type: integer
        minimum: 0
      subjects:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              minimum: 0
            name:
              type: string
    required:
      - jwt
      - firstName
      - lastName
      - username
      - email
      - kind
      - gender
      - campusId
      - currency
      - experience
      - subjects

  NewLoginUser:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
    required:
      - email
      - password

  User:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      email:
        type: string
        format: email
    required:
      - id
      - email

  NewUser:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
      kind:
        type: string
        default: teacher
        enum:
          - admin
          - teacher
      gender:
        type: string
        default: other
        enum:
          - male
          - female
          - other
      campusId:
        type: integer
        minimum: 0
    required:
      - firstName
      - lastName
      - username
      - email
      - password
      - campusId

  State:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      key:
        type: string
      name:
        type: string
      regions:
        type: array
        items:
          $ref: '#/definitions/Region'
    required:
      - id
      - key
      - name
      - regions
  
  Region:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      key:
        type: string
      name:
        type: string
      stateId:
        type: integer
        minimum: 0
      districts:
        type: array
        items:
          $ref: '#/definitions/District'
    required:
      - id
      - key
      - name
      - stateId
      - districts

  District:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      number:
        type: integer
        minimum: 0
      name:
        type: string
      kind:
        type: string
      street:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      phone:
        type: string
      fax:
        type: string
      email:
        type: string
      webpage:
        type: string
      superintendent:
        type: string
      regionId:
        type: integer
        minimum: 0
      campus:
        type: array
        items:
          $ref: '#/definitions/Campus'
    required:
      - id
      - number
      - name
      - kind
      - street
      - city
      - state
      - zip
      - phone
      - fax
      - email
      - webpage
      - superintendent
      - regionId
      - campus

  Campus:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      number:
        type: string
      name:
        type: string
      kind:
        type: string
      charterType:
        type: string
      street:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      phone:
        type: string
      fax:
        type: string
      email:
        type: string
      webpage:
        type: string
      principal:
        type: string
      gradeRange:
        type: string
      enrollment:
        type: string
      districtId:
        type: integer
        minimum: 0
    required:
      - id
      - number
      - name
      - kind
      - charterType
      - street
      - city
      - state
      - zip
      - phone
      - fax
      - email
      - webpage
      - principal
      - gradeRange
      - enrollment
      - districtId

  Subject:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      name:
        type: string
      campusType:
        type: string
      generalTopic:
        type: string
      contentName:
        type: string
      contentDescription:
        type: string
      units:
        type: array
        items:
          $ref: '#/definitions/Unit'
    required:
      - id
      - name
      - campusType
      - generalTopic
      - contentName
      - contentDescription
      - units

  Unit:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      number:
        type: string
      name:
        type: string
      description:
        type: string
      subjectId:
        type: integer
        minimum: 0
      chapters:
        type: array
        items:
          $ref: '#/definitions/Chapter'
    required:
      - id
      - number
      - name
      - description
      - subjectId
      - chapters

  Chapter:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      number:
        type: string
      name:
        type: string
      description:
        type: string
      unidId:
        type: integer
        minimum: 0
      lessons:
        type: array
        items:
          $ref: '#/definitions/Lesson'
    required:
      - id
      - number
      - name
      - description
      - unidId
      - lessons

  Lesson:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      number:
        type: string
      name:
        type: string
      description:
        type: string
      chapterId:
        type: integer
        minimum: 0
    required:
      - id
      - number
      - name
      - description
      - chapterId

  Post:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
    required:
      - id

  News:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
    required:
      - id

  Question:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
    required:
      - id

  NewQuestion:
    type: object
    properties:
      descriptionText:
        type: string
      descriptionImage:
        type: string
      kind:
        type: integer
        minimum: 1
        maximum: 9
      subjectId:
        type: integer
        minimum: 0
      answers:
        type: array
        items:
          type: object
          properties:
            text:
              type: string
            index:
              type: integer
              minimum: 1
              maximum: 20
    required:
      - kind
      - descriptionText
      - descriptionImage
      - subjectId
      - answers

  NewQuestionBySubjectId:
    type: object
    properties:
      id:
        type: integer
        minimum: 0
      descriptionText:
        type: string
      descriptionImage:
        type: string
      kind:
        type: integer
        minimum: 1
        maximum: 9
      approved:
        type: integer
        minimum: 0
      subjectId:
        type: integer
        minimum: 0
      answers:
        type: array
        items:
          type: object
          properties:
            index:
              type: integer
              minimum: 1
              maximum: 20
            text:
              type: string
          required:
            - index
            - text
    required:
      - id
      - kind
      - approved
      - descriptionText
      - descriptionImage
      - subjectId
      - answers
